name: Push_Master_Pipeline

env:
  APPLICATION_NAME: 'ragnar'
  DEPLOY_PACKAGE_NAME: 'korona.azurecr.io/ragnar:${{ github.sha }}'

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    # using ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command

      - name: lint
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: lint # will run `yarn lint` command

      - name: test
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: test:ci # will run `yarn test` command

      - name: build
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: build # will run `yarn build` command

      - name: 'azure login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'docker login'
      - uses: azure/docker-login@v1
        with:
          login-server: korona.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'docker build and push'
        run: |
          docker build . -t {{ env.DEPLOY_PACKAGE_NAME }}
          docker push {{ env.DEPLOY_PACKAGE_NAME }}
